таймер для второго типа создается когда запускается программа


синхронизация ивентов нужна не знаю для чего, серьезно, вообще не знаю и не могу придумать,=>
=> возможно для того чтобы определить порядок отправки ивентов если они тикнули на одинаковое время


сделать метод таймера для плотности второго сигнала, например рекурсивный вызов. Начинается с Timer (var perem = _random.Next(0, 1000)) =>
=> а потом входит в рекурсию Timer(var perem2 = 1-perem). Но пока не знаю как сделать 3 раза в секунду и более, может быть привязать к какому-то множителю =>
=> или сделать из таймера частотомер//////
ПРИДУМАЛ: вводится число, потом var chastota = 1/число, получается chastota в милисекундах, и рекурсивно вызывется по прошлому сценарию в цикле число раз, =>
=>остаток авейтится до секунды и по новой 


сейчас проблема в вызове, я хочу переделать метод ProcessChannel чтобы таймеры были в нем, а в EvetnsSynchronizator'e были события которые вызывают EventBuilder=>
=> в котором уже дергаются методы на отправку 


придумать как эффективно считывать массив байт второго типа, возможно управляемыми чанками по 4килобайта

30.05.2025. 19:46. Я пошел учить английский на зачет в субботу 31 числа

P.S. у меня есть второе решение, 2 обычных мэйновских полотна. В нем нет событий, но шум как в задании и прием как тут, и все работает для 50 соединений, но для 100 программа не вывозит